import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import static java.util.Arrays.asList;

public class TraversalMatrix {
    public static void main(String []arg){
        List<List<Integer>> nums = asList(asList(1,2,3),asList(4,5,6),asList(7,8,9));
        int arr[] = findDiagonalOrder(nums);
        for(int i:arr){
          //  System.out.print(i+"  ");
        }

    }
    public static int[] findDiagonalOrder(List<List<Integer>> nums) {
        class comp implements Comparator<List<Integer>>{
            public int compare(List<Integer> a, List<Integer> b){
                if (a.get(0).equals(b.get(0))) return b.get(1).compareTo(a.get(1));
                return a.get(0).compareTo(b.get(0));
            }
        }

        List<List<Integer>> list = new ArrayList<>();

        for (int i = 0; i < nums.size(); i++){
            for (int j = 0; j < nums.get(i).size(); j++){
                List<Integer> element = new ArrayList<>();
                element.add(i+j);
                element.add(i);
                element.add(nums.get(i).get(j));

                for(int ele :element){System.out.print(ele + " element "+ "  ");}
                list.add(element);
                for(List<Integer> l:list){System.out.print(l+"  ");}
            }

        }


        Collections.sort(list, new comp());
        System.out.println("");
        for(List<Integer>ll :list){
            System.out.print(ll+"  ");
        }
        int[] res = new int[list.size()];
        for (int i = 0; i < res.length; i++){
            int num = list.get(i).get(2);
            res[i] = num;
        }
        return res;
    }
}
